{"version":3,"file":"static/js/758.86b10a9b.chunk.js","mappings":"+KACA,EAAuB,uBAAvB,EAAsD,wBAAtD,EAA0F,4B,6BC0D1F,MArDA,SAAkBA,GAChB,OAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAaC,EAAAA,KAAaC,MAAM,CACpCC,MAAOF,EAAAA,KAAaG,SAAS,2BAC7BC,YAAaJ,EAAAA,KAAaG,SAAS,2BACnCE,QAASL,EAAAA,KACNG,SAAS,2BACTG,IAAI,IAAK,uBAEd,OACE,UAACC,EAAA,EAAD,CAAMC,UAAWC,EAAjB,WACE,gBAAKD,UAAWC,EAAhB,UACE,wBAAKd,EAAMe,UAEb,SAAC,KAAD,CACEC,cAAe,CACbT,MAAOP,EAAMO,MACbE,YAAaT,EAAMS,YACnBC,QAASV,EAAMU,SAEjBO,iBAAkBb,EAClBc,SAAU,SAACC,GACTnB,EAAMoB,YAAYD,GAClBhB,GAAY,GACZkB,YAAW,WACTlB,GAAY,KACX,MAZP,SAeG,gBAAGmB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,aAAcN,EAA9C,EAA8CA,OAA9C,OACC,UAAC,KAAD,YACE,SAACO,EAAA,EAAD,CAAaC,KAAK,QAAQC,MAAM,WAChC,SAACF,EAAA,EAAD,CAAaC,KAAK,cAAcC,MAAM,iBACtC,kBAAOC,QAAQ,UAAf,sBACA,qBACEF,KAAK,UACLG,SAAUL,EACVM,OAAQP,EACRQ,MAAOb,EAAOT,UAEfY,EAAOZ,SAAWa,EAAQb,UACzB,gBAAKG,UAAWC,EAAhB,SAAgCQ,EAAOZ,WAEzC,mBAAQG,UAAU,MAAMoB,KAAK,SAAS/B,SAAUA,EAAhD,SACGF,EAAMkC,wB,6ECjDrB,EAAwB,2B,SCoBxB,MAlBA,SAAqBlC,GACnB,IAAIiC,EAMJ,OAFEA,EAHGjC,EAAMiC,KAGFjC,EAAMiC,KAFN,QAKP,UAAC,EAAAE,SAAD,YACE,kBAAON,QAAS7B,EAAM2B,KAAtB,SAA6B3B,EAAM4B,SACnC,SAAC,KAAD,CAAOD,KAAM3B,EAAM2B,KAAMM,KAAMA,KAC/B,SAAC,KAAD,CAAcN,KAAM3B,EAAM2B,KAAMd,UAAWC,EAA3C,SACG,SAACsB,GAAD,OAAS,gBAAKvB,UAAWC,EAAhB,SAAgCsB,Y,8GCiClD,UAzCA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,SAE1CI,EAAiB,mCAAG,WAAOxB,GAAP,0FAECyB,MACrBC,gDACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnB1C,MAAOY,EAAOZ,MACdE,YAAaU,EAAOV,YACpBC,QAASS,EAAOT,UAElBwC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYZ,MAbT,iBAiBRa,GAjBQ,sBAkBd,IAAIC,MAAM,6BAlBI,OAoBtBhB,EAAS,IAAK,CAAEiB,SAAS,IApBH,gDAsBtBC,QAAQC,IAAR,MAtBsB,yDAAH,sDAyBvB,OACE,SAAC,IAAD,CACEpC,YAAauB,EACbpC,MAAM,GACNE,YAAY,GACZC,QAAQ,GACRwB,WAAW,cACXnB,KAAK","sources":["webpack://myblog/./src/components/BlogForm.module.css?a37e","components/BlogForm.jsx","webpack://myblog/./src/components/FormikField.module.css?a32e","components/FormikField.jsx","pages/NewBlog.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"BlogForm_card__WyM7c\",\"error\":\"BlogForm_error__B9QNG\",\"divisions\":\"BlogForm_divisions__f5PtE\"};","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport classes from \"./BlogForm.module.css\";\r\nimport Card from \"../ui/Card\";\r\nimport FormikField from \"./FormikField\";\r\nfunction BlogForm(props) {\r\n  const [disabled, setDisabled] = useState(false);\r\n  const blogSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"This field is Required!\"),\r\n    description: Yup.string().required(\"This field is Required!\"),\r\n    article: Yup.string()\r\n      .required(\"This field is Required!\")\r\n      .min(500, \"Article too short\"),\r\n  });\r\n  return (\r\n    <Card className={classes.card}>\r\n      <div className={classes.divisions}>\r\n        <h1>{props.text}</h1>\r\n      </div>\r\n      <Formik\r\n        initialValues={{\r\n          title: props.title,\r\n          description: props.description,\r\n          article: props.article,\r\n        }}\r\n        validationSchema={blogSchema}\r\n        onSubmit={(values) => {\r\n          props.blogHandler(values);\r\n          setDisabled(true);\r\n          setTimeout(() => {\r\n            setDisabled(false);\r\n          }, 3000);\r\n        }}\r\n      >\r\n        {({ errors, touched, handleBlur, handleChange, values }) => (\r\n          <Form>\r\n            <FormikField name=\"title\" label=\"Title\" />\r\n            <FormikField name=\"description\" label=\"Description\" />\r\n            <label htmlFor=\"article\">Article</label>\r\n            <textarea\r\n              name=\"article\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.article}\r\n            />\r\n            {errors.article && touched.article && (\r\n              <div className={classes.error}>{errors.article}</div>\r\n            )}\r\n            <button className=\"btn\" type=\"submit\" disabled={disabled}>\r\n              {props.buttonText}\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default BlogForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormikField_error__pd7Oo\"};","import React, { Fragment } from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport classes from \"./FormikField.module.css\";\r\nfunction FormikField(props) {\r\n  let type;\r\n  if (!props.type) {\r\n    type = \"text\";\r\n  } else {\r\n    type = props.type;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <label htmlFor={props.name}>{props.label}</label>\r\n      <Field name={props.name} type={type} />\r\n      <ErrorMessage name={props.name} className={classes.error}>\r\n        {(msg) => <div className={classes.error}>{msg}</div>}\r\n      </ErrorMessage>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FormikField;\r\n","import React from \"react\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport BlogForm from \"../components/BlogForm\";\r\nfunction NewBlog() {\r\n  const navigate = useNavigate();\r\n  const token = useSelector((state) => state.user.token);\r\n\r\n  const createBlogHandler = async (values) => {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_BACKEND_URL + \"/user/new-blog\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            title: values.title,\r\n            description: values.description,\r\n            article: values.article,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authorization: `BEARER ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not create new page\");\r\n      }\r\n      navigate(\"/\", { replace: true });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <BlogForm\r\n      blogHandler={createBlogHandler}\r\n      title=\"\"\r\n      description=\"\"\r\n      article=\"\"\r\n      buttonText=\"Create Blog\"\r\n      text=\"Create a Blog\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default NewBlog;\r\n"],"names":["props","useState","disabled","setDisabled","blogSchema","Yup","shape","title","required","description","article","min","Card","className","classes","text","initialValues","validationSchema","onSubmit","values","blogHandler","setTimeout","errors","touched","handleBlur","handleChange","FormikField","name","label","htmlFor","onChange","onBlur","value","type","buttonText","Fragment","msg","navigate","useNavigate","token","useSelector","state","user","createBlogHandler","fetch","process","method","body","JSON","stringify","headers","authorization","ok","Error","replace","console","log"],"sourceRoot":""}