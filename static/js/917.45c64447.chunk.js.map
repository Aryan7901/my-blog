{"version":3,"file":"static/js/917.45c64447.chunk.js","mappings":"iNAwDA,UAlDkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,SAC1CI,GAASH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAE5CE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,+GAEQC,MACrBC,4CACA,CACEC,QAAS,CACPC,cAAc,UAAD,OAAYV,MANhB,WAETW,EAFS,QAUDC,GAVC,sBAWP,IAAIC,MAAM,mBAXH,uBAaIF,EAASG,OAbb,OAaTC,EAbS,OAcfhB,EAASgB,EAAKjB,OAdC,kDAgBfkB,QAAQC,IAAR,MAhBe,0DAAH,qDAmBhBX,MACC,CAACN,IACJ,IAAMkB,IAAcpB,EACpB,OACE,SAAC,EAAAqB,SAAD,UACGD,GACC,oBAASE,UAAWC,EAAAA,EAAAA,QAApB,SACGvB,EAAMwB,KAAI,SAACC,GACV,OACE,SAAC,IAAD,CAEEC,MAAOD,EAAKC,MACZpB,OAAQA,EACRqB,YAAaF,EAAKE,YAClBC,GAAIH,EAAKI,KAJJJ,EAAKI,WAUlB,SAAC,IAAD","sources":["pages/UserBlogs.jsx"],"sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport BlogItem from \"../components/BlogItem\";\r\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\r\nimport classes from \"./AllBlogs.module.css\";\r\n\r\nconst UserBlogs = () => {\r\n  const [blogs, setBlogs] = useState(null);\r\n  const token = useSelector((state) => state.user.token);\r\n  const author = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    const fetchBlogs = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          process.env.REACT_APP_BACKEND_URL + \"/user/list\",\r\n          {\r\n            headers: {\r\n              authorization: `BEARER ${token}`,\r\n            },\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Could not login\");\r\n        }\r\n        const data = await response.json();\r\n        setBlogs(data.blogs);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchBlogs();\r\n  }, [token]);\r\n  const boolBlogs = !!blogs;\r\n  return (\r\n    <Fragment>\r\n      {boolBlogs ? (\r\n        <section className={classes.content}>\r\n          {blogs.map((blog) => {\r\n            return (\r\n              <BlogItem\r\n                key={blog._id}\r\n                title={blog.title}\r\n                author={author}\r\n                description={blog.description}\r\n                id={blog._id}\r\n              />\r\n            );\r\n          })}\r\n        </section>\r\n      ) : (\r\n        <LoadingSpinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default UserBlogs;\r\n"],"names":["useState","blogs","setBlogs","token","useSelector","state","user","author","useEffect","fetchBlogs","fetch","process","headers","authorization","response","ok","Error","json","data","console","log","boolBlogs","Fragment","className","classes","map","blog","title","description","id","_id"],"sourceRoot":""}