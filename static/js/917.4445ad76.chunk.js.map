{"version":3,"file":"static/js/917.4445ad76.chunk.js","mappings":"oOAiFA,UA1EkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,SAC1CI,GAASH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAC5C,GAAoCN,EAAAA,EAAAA,UAAS,GAA7C,eAAOQ,EAAP,KAAmBC,EAAnB,KAEMC,EADe,GACAF,EACfG,EAAcV,EAAQW,KAAKC,KAAKZ,EAAMa,OAFvB,IAEgD,GAIrEC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,+GAEQC,MACrBC,4CACA,CACEC,QAAS,CACPC,cAAc,UAAD,OAAYjB,MANhB,WAETkB,EAFS,QAUDC,GAVC,sBAWP,IAAIC,MAAM,gCAXH,uBAaIF,EAASG,OAbb,OAaTC,EAbS,OAcfvB,EAASuB,EAAKxB,OAdC,kDAgBfyB,QAAQC,IAAR,MAhBe,0DAAH,qDAmBhBX,MACC,CAACb,IACJ,IAAMyB,EAA6C,OAA1BC,KAAKC,UAAU7B,GAClC8B,IAAc9B,EACpB,OACE,UAAC,EAAA+B,SAAD,WACGJ,IACC,gBAAKK,UAAWC,EAAAA,EAAAA,QAAhB,UACE,2DAGHH,GACC,qBAASE,UAAWC,EAAAA,EAAAA,QAApB,UACGjC,EACEkC,MAAMzB,EAAcA,EAxCV,IAyCV0B,KAAI,SAACC,GACJ,OACE,SAAC,IAAD,CAEEC,MAAOD,EAAKC,MACZ/B,OAAQA,EACRgC,YAAaF,EAAKE,YAClBC,GAAIH,EAAKI,KAJJJ,EAAKI,SAQlB,SAAC,IAAD,CACEC,cAAe,WACfC,UAAW,OACXhC,UAAWA,EACXiC,aArDS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBpC,EAAcoC,IAqDNC,mBAAoBZ,EAAAA,EAAAA,UACpBa,sBAAuBb,EAAAA,EAAAA,IACvBc,kBAAmBd,EAAAA,EAAAA,IACnBe,gBAAiBf,EAAAA,EAAAA,aAIrB,SAAC,IAAD","sources":["pages/UserBlogs.jsx"],"sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport BlogItem from \"../components/BlogItem\";\r\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\r\nimport classes from \"./AllBlogs.module.css\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst UserBlogs = () => {\r\n  const [blogs, setBlogs] = useState(null);\r\n  const token = useSelector((state) => state.user.token);\r\n  const author = useSelector((state) => state.user);\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const blogsPerPage = 10;\r\n  const pagesVisited = pageNumber * blogsPerPage;\r\n  const pageCount = !!blogs ? Math.ceil(blogs.length / blogsPerPage) : 0;\r\n  const changePage = ({ selected }) => {\r\n    setPageNumber(selected);\r\n  };\r\n  useEffect(() => {\r\n    const fetchBlogs = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          process.env.REACT_APP_BACKEND_URL + \"/user/list\",\r\n          {\r\n            headers: {\r\n              authorization: `BEARER ${token}`,\r\n            },\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Could not fetch User's Pages\");\r\n        }\r\n        const data = await response.json();\r\n        setBlogs(data.blogs);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchBlogs();\r\n  }, [token]);\r\n  const boolShowNotFound = JSON.stringify(blogs) === \"[]\";\r\n  const boolBlogs = !!blogs;\r\n  return (\r\n    <Fragment>\r\n      {boolShowNotFound && (\r\n        <div className={classes.message}>\r\n          <h1>You are yet to Write a Blog!</h1>\r\n        </div>\r\n      )}\r\n      {boolBlogs ? (\r\n        <section className={classes.content}>\r\n          {blogs\r\n            .slice(pagesVisited, pagesVisited + blogsPerPage)\r\n            .map((blog) => {\r\n              return (\r\n                <BlogItem\r\n                  key={blog._id}\r\n                  title={blog.title}\r\n                  author={author}\r\n                  description={blog.description}\r\n                  id={blog._id}\r\n                />\r\n              );\r\n            })}\r\n          <ReactPaginate\r\n            previousLabel={\"Previous\"}\r\n            nextLabel={\"Next\"}\r\n            pageCount={pageCount}\r\n            onPageChange={changePage}\r\n            containerClassName={classes.container}\r\n            previousLinkClassName={classes.btn}\r\n            nextLinkClassName={classes.btn}\r\n            activeClassName={classes.active}\r\n          />\r\n        </section>\r\n      ) : (\r\n        <LoadingSpinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default UserBlogs;\r\n"],"names":["useState","blogs","setBlogs","token","useSelector","state","user","author","pageNumber","setPageNumber","pagesVisited","pageCount","Math","ceil","length","useEffect","fetchBlogs","fetch","process","headers","authorization","response","ok","Error","json","data","console","log","boolShowNotFound","JSON","stringify","boolBlogs","Fragment","className","classes","slice","map","blog","title","description","id","_id","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","activeClassName"],"sourceRoot":""}