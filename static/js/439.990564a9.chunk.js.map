{"version":3,"file":"static/js/439.990564a9.chunk.js","mappings":"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","sources":["webpack://myblog/./src/components/BlogForm.module.css?a37e","components/BlogForm.jsx","webpack://myblog/./src/components/FormikField.module.css?a32e","components/FormikField.jsx","pages/EditBlog.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"BlogForm_card__WyM7c\",\"error\":\"BlogForm_error__B9QNG\",\"divisions\":\"BlogForm_divisions__f5PtE\"};","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport classes from \"./BlogForm.module.css\";\r\nimport Card from \"../ui/Card\";\r\nimport FormikField from \"./FormikField\";\r\nfunction BlogForm(props) {\r\n  const blogSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"This field is Required!\"),\r\n    description: Yup.string().required(\"This field is Required!\"),\r\n    article: Yup.string()\r\n      .required(\"This field is Required!\")\r\n      .min(50, \"Article too short\"),\r\n  });\r\n  return (\r\n    <Card className={classes.card}>\r\n      <div className={classes.divisions}>\r\n        <h1>{props.text}</h1>\r\n      </div>\r\n      <Formik\r\n        initialValues={{\r\n          title: props.title,\r\n          description: props.description,\r\n          article: props.article,\r\n        }}\r\n        validationSchema={blogSchema}\r\n        onSubmit={(values) => {\r\n          props.blogHandler(values);\r\n        }}\r\n      >\r\n        {({ errors, touched, handleBlur, handleChange, values }) => (\r\n          <Form>\r\n            <FormikField name=\"title\" label=\"Title\" />\r\n            <FormikField name=\"description\" label=\"Description\" />\r\n            <label htmlFor=\"article\">Article</label>\r\n            <textarea\r\n              name=\"article\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.article}\r\n            />\r\n            {errors.article && touched.article && (\r\n              <div className={classes.error}>{errors.article}</div>\r\n            )}\r\n            <button className=\"btn\" type=\"submit\">\r\n              {props.buttonText}\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default BlogForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormikField_error__pd7Oo\"};","import React, { Fragment } from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport classes from \"./FormikField.module.css\";\r\nfunction FormikField(props) {\r\n  let type;\r\n  if (!props.type) {\r\n    type = \"text\";\r\n  } else {\r\n    type = props.type;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <label htmlFor={props.name}>{props.label}</label>\r\n      <Field name={props.name} type={type} />\r\n      <ErrorMessage name={props.name} className={classes.error}>\r\n        {(msg) => <div className={classes.error}>{msg}</div>}\r\n      </ErrorMessage>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FormikField;\r\n","import { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\r\nimport BlogForm from \"../components/BlogForm\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\nfunction EditBlog() {\r\n  const params = useParams();\r\n  const { id } = params;\r\n  const navigate = useNavigate();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [blog, setBlog] = useState(null);\r\n  useEffect(() => {\r\n    const fetchBlog = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/blogs/blog/${id}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Could not fetch blog data\");\r\n        }\r\n        const data = await response.json();\r\n        setBlog(data.blog);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchBlog();\r\n  }, [id]);\r\n\r\n  const updateBlogHandler = async (values) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/${id}`,\r\n        {\r\n          method: \"PATCH\",\r\n          body: JSON.stringify({\r\n            title: values.title,\r\n            description: values.description,\r\n            article: values.article,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authorization: `BEARER ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not edit page\");\r\n      }\r\n      navigate(\"/user\", { replace: true });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {!!blog ? (\r\n        <BlogForm\r\n          blogHandler={updateBlogHandler}\r\n          title={blog.title}\r\n          description={blog.description}\r\n          article={blog.article}\r\n          buttonText=\"Edit Blog\"\r\n          text=\"Edit Blog\"\r\n        />\r\n      ) : (\r\n        <LoadingSpinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default EditBlog;\r\n"],"names":["props","blogSchema","Yup","shape","title","required","description","article","min","Card","className","classes","text","initialValues","validationSchema","onSubmit","values","blogHandler","errors","touched","handleBlur","handleChange","FormikField","name","label","htmlFor","onChange","onBlur","value","type","buttonText","Fragment","msg","id","useParams","navigate","useNavigate","token","useSelector","state","user","useState","blog","setBlog","useEffect","fetchBlog","fetch","process","response","ok","Error","json","data","console","log","updateBlogHandler","method","body","JSON","stringify","headers","authorization","replace"],"sourceRoot":""}