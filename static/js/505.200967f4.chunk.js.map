{"version":3,"file":"static/js/505.200967f4.chunk.js","mappings":"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","sources":["webpack://myblog/./src/components/FormikField.module.css?a32e","components/FormikField.jsx","pages/SignUp.jsx","ui/Modals/Backdrop.js","ui/Modals/Modal.js","webpack://myblog/./src/ui/Modals/ErrorModal.module.css?3752","ui/Modals/ErrorModal.js","webpack://myblog/./src/pages/Login.module.css?959c"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormikField_error__pd7Oo\"};","import React, { Fragment } from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport classes from \"./FormikField.module.css\";\r\nfunction FormikField(props) {\r\n  let type;\r\n  if (!props.type) {\r\n    type = \"text\";\r\n  } else {\r\n    type = props.type;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <label htmlFor={props.name}>{props.label}</label>\r\n      <Field name={props.name} type={type} />\r\n      <ErrorMessage name={props.name} className={classes.error}>\r\n        {(msg) => <div className={classes.error}>{msg}</div>}\r\n      </ErrorMessage>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FormikField;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../ui/Card\";\r\nimport * as Yup from \"yup\";\r\nimport classes from \"./Login.module.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { userActions } from \"../store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormikField from \"../components/FormikField\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\nimport ErrorModal from \"../ui/Modals/ErrorModal\";\r\n\r\nfunction SignUp() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(null);\r\n  const signUpSchema = Yup.object().shape({\r\n    firstName: Yup.string().required(\"This field is Required!\"),\r\n    lastName: Yup.string().required(\"This field is Required!\"),\r\n    email: Yup.string()\r\n      .email(\"Invalid email\")\r\n      .required(\"This field is Required!\"),\r\n    password: Yup.string()\r\n      .min(8, \"Too Short!\")\r\n      .required(\"This field is Required!\"),\r\n  });\r\n  const signupHandler = async (values) => {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_BACKEND_URL + \"/user/signup\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: values.email,\r\n            password: values.password,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not Sign Up!\");\r\n      }\r\n      const data = await response.json();\r\n      localStorage.setItem(\"userData\", JSON.stringify(data));\r\n      const tokenExpirationDate = new Date(\r\n        new Date().getTime() + 1000 * 60 * 60\r\n      );\r\n      localStorage.setItem(\r\n        \"timer\",\r\n        JSON.stringify({ timer: tokenExpirationDate.toISOString() })\r\n      );\r\n      dispatch(userActions.login(data));\r\n      navigate(\"../\", { replace: true });\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {!!error && <ErrorModal error={error} onClear={() => setError(false)} />}\r\n      <Card className={classes.card}>\r\n        <div className={classes.divisions}>\r\n          <h1>Sign Up</h1>\r\n        </div>\r\n        <Formik\r\n          initialValues={{\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n          }}\r\n          validationSchema={signUpSchema}\r\n          onSubmit={(values) => {\r\n            signupHandler(values);\r\n          }}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              <FormikField name=\"firstName\" label=\"First Name\" />\r\n              <FormikField name=\"lastName\" label=\"Last Name\" />\r\n              <FormikField name=\"email\" label=\"Email\" type=\"email\" />\r\n              <FormikField name=\"password\" label=\"Password\" type=\"password\" />\r\n              <button className=\"btn\" type=\"submit\">\r\n                Sign Up\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <div className={classes.divisions}>\r\n          <Link to=\"../login\">Sign In if you have an existing account</Link>\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ErrorModal_button__AXhIh\"};","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport classes from \"./ErrorModal.module.css\";\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={\n        <button className={\"btn \" + classes.button} onClick={props.onClear}>\n          Okay\n        </button>\n      }\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Login_card__50ZJb\",\"error\":\"Login_error__mYSQ1\",\"divisions\":\"Login_divisions__unYTt\"};"],"names":["props","type","Fragment","htmlFor","name","label","className","classes","msg","dispatch","useDispatch","navigate","useNavigate","useState","error","setError","signUpSchema","Yup","shape","firstName","required","lastName","email","password","min","signupHandler","values","fetch","process","method","body","JSON","stringify","headers","response","ok","Error","json","data","localStorage","setItem","tokenExpirationDate","Date","getTime","timer","toISOString","userActions","replace","console","log","message","onClear","initialValues","validationSchema","onSubmit","errors","touched","to","ReactDOM","onClick","document","getElementById","ModalOverlay","content","style","headerClass","header","event","preventDefault","contentClass","children","footerClass","footer","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames"],"sourceRoot":""}